; ModuleID = '/home/niklas/repos/anydsl/rodent/build/tools/bench_interface/./bench_interface'
source_filename = "/home/niklas/repos/anydsl/rodent/build/tools/bench_interface/./bench_interface"
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v16:16:16-v32:32:32-v64:64:64-v128:128:128-n16:32:64"
target triple = "nvptx64-nvidia-cuda"

%0 = type { %1, %1, %1, %2, %3, %4, %4, float }
%1 = type { float, float, float }
%2 = type { float, float }
%3 = type { [3 x %1] }
%4 = type { float, float, float }
%5 = type { [0 x %1]*, [0 x i32]*, [0 x %1]*, [0 x %2]*, %6, %6, %6 }
%6 = type { [0 x %4]*, %4, i32, i32, i32, i32 }
%7 = type { i32, %2 }

define ptx_kernel %0 @compute_shader_input(i1 %opt_45293, %5 %mesh_45294, %7 %tri_hit_45295) !dbg !11 {
compute_shader_input_start:
  %0 = alloca [3 x %1], align 4
  br label %compute_shader_input, !dbg !14

compute_shader_input:                             ; preds = %compute_shader_input_start
  %1 = extractvalue %7 %tri_hit_45295, 0, !dbg !15
  %2 = extractvalue %5 %mesh_45294, 1, !dbg !16
  %3 = extractvalue %5 %mesh_45294, 0, !dbg !17
  %4 = mul nsw i32 4, %1, !dbg !15
  %5 = getelementptr inbounds [0 x i32], [0 x i32]* %2, i64 0, i32 %4, !dbg !16
  %6 = add nsw i32 2, %4, !dbg !18
  %7 = add nsw i32 1, %4, !dbg !19
  %8 = load i32, i32* %5, align 4, !dbg !16
  %9 = getelementptr inbounds [0 x i32], [0 x i32]* %2, i64 0, i32 %6, !dbg !20
  %10 = getelementptr inbounds [0 x i32], [0 x i32]* %2, i64 0, i32 %7, !dbg !21
  %11 = load i32, i32* %10, align 4, !dbg !21
  %12 = getelementptr inbounds [0 x %1], [0 x %1]* %3, i64 0, i32 %8, !dbg !17
  %13 = getelementptr inbounds [0 x %1], [0 x %1]* %3, i64 0, i32 %11, !dbg !22
  %14 = load i32, i32* %9, align 4, !dbg !20
  %15 = getelementptr inbounds [0 x %1], [0 x %1]* %3, i64 0, i32 %14, !dbg !23
  %16 = load %1, %1* %12, align 4, !dbg !17
  %17 = load %1, %1* %13, align 4, !dbg !22
  %18 = extractvalue %1 %16, 0, !dbg !24
  %19 = extractvalue %1 %16, 1, !dbg !25
  %20 = extractvalue %1 %16, 2, !dbg !26
  %21 = load %1, %1* %15, align 4, !dbg !23
  %22 = extractvalue %1 %17, 0, !dbg !27
  %23 = extractvalue %1 %17, 1, !dbg !28
  %24 = extractvalue %1 %17, 2, !dbg !29
  %25 = fsub float %22, %18, !dbg !30
  %26 = fsub float %23, %19, !dbg !30
  %27 = fsub float %24, %20, !dbg !30
  %28 = extractvalue %1 %21, 0, !dbg !31
  %29 = extractvalue %1 %21, 1, !dbg !32
  %30 = extractvalue %1 %21, 2, !dbg !33
  %31 = fsub float %28, %18, !dbg !30
  %32 = fsub float %29, %19, !dbg !30
  %33 = fsub float %30, %20, !dbg !30
  %34 = fmul float %26, %31, !dbg !34
  %35 = fmul float %27, %31, !dbg !35
  %36 = fmul float %25, %32, !dbg !36
  %37 = fmul float %27, %32, !dbg !37
  %38 = fmul float %26, %33, !dbg !38
  %39 = fmul float %25, %33, !dbg !39
  %40 = fsub float %36, %34, !dbg !36
  %41 = fsub float %35, %39, !dbg !35
  %42 = fsub float %38, %37, !dbg !38
  %43 = fmul float %40, %40, !dbg !40
  %44 = fmul float %41, %41, !dbg !41
  %45 = fmul float %42, %42, !dbg !42
  %46 = fadd float %45, %44, !dbg !42
  %47 = fadd float %46, %43, !dbg !42
  %48 = call float @__nv_sqrtf(float %47), !dbg !43
  br label %vec3_len_cont, !dbg !43

vec3_len_cont:                                    ; preds = %compute_shader_input
  %vec3_len = phi float [ %48, %compute_shader_input ]
  %49 = extractvalue %5 %mesh_45294, 2, !dbg !44
  %50 = getelementptr inbounds [0 x %1], [0 x %1]* %49, i64 0, i32 %8, !dbg !44
  %51 = extractvalue %7 %tri_hit_45295, 1, !dbg !45
  %52 = getelementptr inbounds [0 x %1], [0 x %1]* %49, i64 0, i32 %11, !dbg !46
  %53 = extractvalue %2 %51, 1, !dbg !47
  %54 = getelementptr inbounds [0 x %1], [0 x %1]* %49, i64 0, i32 %14, !dbg !48
  %55 = load %1, %1* %50, align 4, !dbg !44
  %56 = extractvalue %2 %51, 0, !dbg !49
  %57 = fsub float 1.000000e+00, %56, !dbg !50
  %58 = load %1, %1* %52, align 4, !dbg !46
  %59 = extractvalue %1 %55, 2, !dbg !26
  %60 = extractvalue %1 %55, 0, !dbg !24
  %61 = extractvalue %1 %55, 1, !dbg !25
  %62 = fsub float %57, %53, !dbg !50
  %63 = fmul float %62, %59, !dbg !51
  %64 = fmul float %62, %60, !dbg !51
  %65 = fmul float %62, %61, !dbg !51
  %66 = load %1, %1* %54, align 4, !dbg !48
  %67 = extractvalue %1 %58, 2, !dbg !29
  %68 = extractvalue %1 %58, 0, !dbg !27
  %69 = extractvalue %1 %58, 1, !dbg !28
  %70 = fmul float %56, %67, !dbg !52
  %71 = fmul float %56, %68, !dbg !52
  %72 = fmul float %56, %69, !dbg !52
  %73 = extractvalue %1 %66, 2, !dbg !33
  %74 = extractvalue %1 %66, 0, !dbg !31
  %75 = extractvalue %1 %66, 1, !dbg !32
  %76 = fadd float %63, %70, !dbg !51
  %77 = fadd float %64, %71, !dbg !51
  %78 = fadd float %65, %72, !dbg !51
  %79 = fmul float %53, %73, !dbg !53
  %80 = fmul float %53, %74, !dbg !53
  %81 = fmul float %53, %75, !dbg !53
  %82 = fadd float %76, %79, !dbg !51
  %83 = fadd float %77, %80, !dbg !51
  %84 = fadd float %78, %81, !dbg !51
  %85 = fmul float %82, %82, !dbg !40
  %86 = fmul float %83, %83, !dbg !42
  %87 = fmul float %84, %84, !dbg !41
  %88 = fadd float %86, %87, !dbg !42
  %89 = fadd float %88, %85, !dbg !42
  %90 = call float @__nv_sqrtf(float %89), !dbg !43
  br label %vec3_len_cont1, !dbg !43

vec3_len_cont1:                                   ; preds = %vec3_len_cont
  %vec3_len2 = phi float [ %90, %vec3_len_cont ]
  %91 = extractvalue %5 %mesh_45294, 3, !dbg !54
  %92 = extractvalue %5 %mesh_45294, 4, !dbg !55
  %93 = getelementptr inbounds [0 x %2], [0 x %2]* %91, i64 0, i32 %14, !dbg !56
  %94 = getelementptr inbounds [0 x %2], [0 x %2]* %91, i64 0, i32 %11, !dbg !57
  %95 = getelementptr inbounds [0 x %2], [0 x %2]* %91, i64 0, i32 %8, !dbg !54
  %96 = load %2, %2* %95, align 4, !dbg !54
  %97 = load %2, %2* %94, align 4, !dbg !57
  %98 = extractvalue %2 %96, 0, !dbg !58
  %99 = extractvalue %2 %96, 1, !dbg !59
  %100 = fmul float %62, %98, !dbg !51
  %101 = fmul float %62, %99, !dbg !51
  %102 = load %2, %2* %93, align 4, !dbg !56
  %103 = extractvalue %2 %97, 0, !dbg !60
  %104 = extractvalue %2 %97, 1, !dbg !61
  %105 = fmul float %56, %103, !dbg !52
  %106 = fmul float %56, %104, !dbg !52
  %107 = extractvalue %2 %102, 0, !dbg !62
  %108 = extractvalue %2 %102, 1, !dbg !63
  %109 = fadd float %100, %105, !dbg !51
  %110 = fadd float %101, %106, !dbg !51
  %111 = fmul float %53, %107, !dbg !53
  %112 = fmul float %53, %108, !dbg !53
  %113 = fadd float %109, %111, !dbg !51
  %114 = fadd float %110, %112, !dbg !51
  %115 = insertvalue %2 undef, float %113, 0, !dbg !64
  %116 = insertvalue %2 %115, float %114, 1, !dbg !64
  %117 = call ptx_kernel %4 @lookup_tex(i1 false, %6 %92, %2 %116), !dbg !65
  br label %lookup_tex_cont, !dbg !65

lookup_tex_cont:                                  ; preds = %vec3_len_cont1
  %kd = phi %4 [ %117, %vec3_len_cont1 ]
  %118 = extractvalue %5 %mesh_45294, 5, !dbg !66
  %119 = call ptx_kernel %4 @lookup_tex(i1 false, %6 %118, %2 %116), !dbg !67
  br label %lookup_tex_cont3, !dbg !67

lookup_tex_cont3:                                 ; preds = %lookup_tex_cont
  %ks = phi %4 [ %119, %lookup_tex_cont ]
  %120 = extractvalue %5 %mesh_45294, 6, !dbg !68
  %121 = call ptx_kernel %4 @lookup_tex(i1 false, %6 %120, %2 %116), !dbg !69
  br label %lookup_tex_cont4, !dbg !69

lookup_tex_cont4:                                 ; preds = %lookup_tex_cont3
  %lookup_tex = phi %4 [ %121, %lookup_tex_cont3 ]
  %122 = fmul float %62, %18, !dbg !51
  %123 = fmul float %56, %24, !dbg !52
  %124 = fmul float %53, %29, !dbg !53
  %125 = fdiv float 1.000000e+00, %vec3_len, !dbg !70
  %126 = fmul float %41, %125, !dbg !71
  %127 = fmul float %56, %23, !dbg !52
  %128 = fmul float %62, %19, !dbg !51
  %129 = fmul float %40, %125, !dbg !71
  %130 = fdiv float 1.000000e+00, %vec3_len2, !dbg !70
  %131 = extractvalue %4 %lookup_tex, 0, !dbg !69
  %132 = fmul float %53, %28, !dbg !53
  %133 = fmul float %62, %20, !dbg !51
  %134 = fmul float %53, %30, !dbg !53
  %135 = fmul float %56, %22, !dbg !52
  %136 = fadd float %122, %135, !dbg !51
  %137 = fadd float %133, %123, !dbg !51
  %138 = fmul float %42, %125, !dbg !71
  %139 = insertvalue %1 undef, float %138, 0, !dbg !72
  %140 = insertvalue %1 %139, float %126, 1, !dbg !72
  %141 = insertvalue %1 %140, float %129, 2, !dbg !72
  %142 = fadd float %128, %127, !dbg !51
  %143 = fmul float %83, %130, !dbg !71
  %144 = fmul float %84, %130, !dbg !71
  %145 = fmul float %82, %130, !dbg !71
  %146 = fadd float %136, %132, !dbg !51
  %147 = fadd float %137, %134, !dbg !51
  %148 = fadd float %142, %124, !dbg !51
  %149 = fmul float %143, %144, !dbg !73
  %150 = insertvalue %1 undef, float %143, 0, !dbg !72
  %151 = insertvalue %1 %150, float %144, 1, !dbg !72
  %152 = insertvalue %1 %151, float %145, 2, !dbg !72
  %153 = fmul float %144, %144, !dbg !74
  %154 = fsub float -0.000000e+00, %144, !dbg !75
  %155 = fcmp ole float 0.000000e+00, %145, !dbg !76
  %156 = insertvalue %1 undef, float %146, 0, !dbg !77
  %157 = insertvalue %1 %156, float %148, 1, !dbg !77
  %158 = insertvalue %1 %157, float %147, 2, !dbg !77
  %159 = select i1 %155, float 1.000000e+00, float -1.000000e+00, !dbg !78
  %160 = fsub float -0.000000e+00, %159, !dbg !79
  %161 = fmul float %159, %143, !dbg !80
  %162 = fadd float %159, %145, !dbg !81
  %163 = fmul float %160, %143, !dbg !79
  %164 = fmul float %161, %143, !dbg !80
  %a = fdiv float -1.000000e+00, %162, !dbg !82
  %165 = fmul float %164, %a, !dbg !80
  %b = fmul float %149, %a, !dbg !73
  %166 = fmul float %153, %a, !dbg !74
  %167 = fadd float 1.000000e+00, %165, !dbg !83
  %168 = fmul float %159, %b, !dbg !84
  %169 = fadd float %159, %166, !dbg !85
  %170 = insertvalue %1 undef, float %167, 0, !dbg !72
  %171 = insertvalue %1 %170, float %168, 1, !dbg !72
  %172 = insertvalue %1 %171, float %163, 2, !dbg !72
  %173 = insertvalue %1 undef, float %b, 0, !dbg !72
  %174 = insertvalue %1 %173, float %169, 1, !dbg !72
  %175 = insertvalue %1 %174, float %154, 2, !dbg !72
  %176 = insertvalue %1 undef, float %167, 0, !dbg !86
  %177 = insertvalue %1 %176, float %168, 1, !dbg !86
  %178 = insertvalue %1 %177, float %163, 2, !dbg !86
  %179 = getelementptr inbounds [3 x %1], [3 x %1]* %0, i64 0, i64 0, !dbg !86
  store %1 %172, %1* %179, !dbg !86
  %180 = getelementptr inbounds [3 x %1], [3 x %1]* %0, i64 0, i64 1, !dbg !86
  store %1 %175, %1* %180, !dbg !86
  %181 = getelementptr inbounds [3 x %1], [3 x %1]* %0, i64 0, i64 2, !dbg !86
  store %1 %152, %1* %181, !dbg !86
  %182 = load [3 x %1], [3 x %1]* %0, !dbg !86
  %183 = insertvalue %3 undef, [3 x %1] %182, 0, !dbg !87
  %184 = insertvalue %0 undef, %1 %158, 0, !dbg !88
  %185 = insertvalue %0 %184, %1 %141, 1, !dbg !88
  %186 = insertvalue %0 %185, %1 %152, 2, !dbg !88
  %187 = insertvalue %0 %186, %2 %51, 3, !dbg !88
  %188 = insertvalue %0 %187, %3 %183, 4, !dbg !88
  %189 = insertvalue %0 %188, %4 %kd, 5, !dbg !88
  %190 = insertvalue %0 %189, %4 %ks, 6, !dbg !88
  %191 = insertvalue %0 %190, float %131, 7, !dbg !88
  ret %0 %191, !dbg !89
}

; Function Attrs: nounwind readnone
declare i64 @llvm.nvvm.texsurf.handle.p1i64(metadata, i64 addrspace(1)*) #0

declare float @__nv_sqrtf(float)

define ptx_kernel %4 @lookup_tex(i1 %opt_45422, %6 %tex_45423, %2 %uv_45424) !dbg !90 {
lookup_tex_start:
  %uv_45438 = alloca %2, align 4
  br label %lookup_tex, !dbg !91

lookup_tex:                                       ; preds = %lookup_tex_start
  %0 = extractvalue %2 %uv_45424, 0, !dbg !92
  %1 = extractvalue %6 %tex_45423, 2, !dbg !93
  %2 = getelementptr inbounds %2, %2* %uv_45438, i32 0, i32 0, !dbg !94
  store %2 %uv_45424, %2* %uv_45438, align 4, !dbg !95
  %3 = getelementptr inbounds %2, %2* %uv_45438, i32 0, i32 1, !dbg !96
  %4 = icmp eq i32 %1, 0, !dbg !93
  br i1 %4, label %expr_true11, label %expr_false, !dbg !97

expr_false:                                       ; preds = %lookup_tex
  %5 = icmp eq i32 %1, 1, !dbg !98
  br i1 %5, label %expr_true9, label %expr_false1, !dbg !99

expr_false1:                                      ; preds = %expr_false
  %6 = fcmp olt float %0, 0.000000e+00, !dbg !100
  br i1 %6, label %expr_true8, label %expr_false2, !dbg !101

expr_false2:                                      ; preds = %expr_false1
  %7 = fcmp olt float 1.000000e+00, %0, !dbg !102
  br i1 %7, label %expr_true7, label %expr_false3, !dbg !103

expr_false3:                                      ; preds = %expr_false2
  %8 = extractvalue %2 %uv_45424, 1, !dbg !104
  %9 = fcmp olt float %8, 0.000000e+00, !dbg !104
  br i1 %9, label %expr_true6, label %expr_false4, !dbg !105

expr_false4:                                      ; preds = %expr_false3
  %10 = fcmp olt float 1.000000e+00, %8, !dbg !106
  br i1 %10, label %expr_true, label %expr_false5, !dbg !107

expr_false5:                                      ; preds = %expr_false4
  br label %if_join, !dbg !108

expr_true:                                        ; preds = %expr_false4
  br label %if_then, !dbg !109

expr_true6:                                       ; preds = %expr_false3
  br label %if_then, !dbg !109

expr_true7:                                       ; preds = %expr_false2
  br label %if_then, !dbg !109

expr_true8:                                       ; preds = %expr_false1
  br label %if_then, !dbg !109

if_then:                                          ; preds = %expr_true8, %expr_true7, %expr_true6, %expr_true
  %11 = extractvalue %6 %tex_45423, 1, !dbg !110
  ret %4 %11, !dbg !111

expr_true9:                                       ; preds = %expr_false
  %12 = call float @__nv_floorf(float %0), !dbg !112
  br label %_cont, !dbg !112

_cont:                                            ; preds = %expr_true9
  %13 = phi float [ %12, %expr_true9 ]
  %14 = fsub float %0, %13, !dbg !113
  store float %14, float* %2, align 4, !dbg !114
  %15 = load float, float* %3, align 4, !dbg !115
  %16 = call float @__nv_floorf(float %15), !dbg !112
  br label %_cont10, !dbg !112

_cont10:                                          ; preds = %_cont
  %17 = phi float [ %16, %_cont ]
  %18 = fsub float %15, %17, !dbg !113
  store float %18, float* %3, align 4, !dbg !116
  br label %if_join, !dbg !108

if_join:                                          ; preds = %_cont10, %expr_false5
  br label %if_join16, !dbg !108

expr_true11:                                      ; preds = %lookup_tex
  %19 = call float @__nv_fmaxf(float 0.000000e+00, float %0), !dbg !117
  br label %_cont12, !dbg !117

_cont12:                                          ; preds = %expr_true11
  %20 = phi float [ %19, %expr_true11 ]
  %21 = call float @__nv_fminf(float 1.000000e+00, float %20), !dbg !118
  br label %_cont13, !dbg !118

_cont13:                                          ; preds = %_cont12
  %22 = phi float [ %21, %_cont12 ]
  store float %22, float* %2, align 4, !dbg !94
  %23 = load float, float* %3, align 4, !dbg !119
  %24 = call float @__nv_fmaxf(float 0.000000e+00, float %23), !dbg !117
  br label %_cont14, !dbg !117

_cont14:                                          ; preds = %_cont13
  %25 = phi float [ %24, %_cont13 ]
  %26 = call float @__nv_fminf(float 1.000000e+00, float %25), !dbg !118
  br label %_cont15, !dbg !118

_cont15:                                          ; preds = %_cont14
  %27 = phi float [ %26, %_cont14 ]
  store float %27, float* %3, align 4, !dbg !96
  br label %if_join16, !dbg !108

if_join16:                                        ; preds = %_cont15, %if_join
  %28 = extractvalue %6 %tex_45423, 3, !dbg !120
  %29 = extractvalue %6 %tex_45423, 4, !dbg !121
  %30 = sub nsw i32 %29, 1, !dbg !122
  %31 = sitofp i32 %29 to float, !dbg !123
  %32 = extractvalue %6 %tex_45423, 0, !dbg !124
  %33 = extractvalue %6 %tex_45423, 5, !dbg !125
  %34 = icmp eq i32 %28, 0, !dbg !120
  %35 = sub nsw i32 %33, 1, !dbg !126
  %36 = sitofp i32 %33 to float, !dbg !127
  br i1 %34, label %expr_true22, label %expr_false17, !dbg !128

expr_false17:                                     ; preds = %if_join16
  %37 = load %2, %2* %uv_45438, align 4, !dbg !129
  %38 = extractvalue %2 %37, 0, !dbg !130
  %u = fmul float %38, %31, !dbg !130
  %39 = fptosi float %u to i32, !dbg !131
  %40 = call ptx_device i32 @llvm.nvvm.min.i(i32 %39, i32 %30), !dbg !132
  br label %_cont18, !dbg !132

_cont18:                                          ; preds = %expr_false17
  %x0 = phi i32 [ %40, %expr_false17 ]
  %41 = extractvalue %2 %37, 1, !dbg !133
  %v = fmul float %41, %36, !dbg !133
  %42 = fptosi float %v to i32, !dbg !134
  %43 = call ptx_device i32 @llvm.nvvm.min.i(i32 %42, i32 %35), !dbg !135
  br label %_cont19, !dbg !135

_cont19:                                          ; preds = %_cont18
  %y0 = phi i32 [ %43, %_cont18 ]
  %44 = add nsw i32 1, %x0, !dbg !136
  %45 = call ptx_device i32 @llvm.nvvm.min.i(i32 %44, i32 %30), !dbg !137
  br label %_cont20, !dbg !137

_cont20:                                          ; preds = %_cont19
  %x1 = phi i32 [ %45, %_cont19 ]
  %46 = add nsw i32 1, %y0, !dbg !138
  %47 = call ptx_device i32 @llvm.nvvm.min.i(i32 %46, i32 %35), !dbg !139
  br label %_cont21, !dbg !139

_cont21:                                          ; preds = %_cont20
  %y1 = phi i32 [ %47, %_cont20 ]
  %48 = mul nsw i32 %y1, %29, !dbg !140
  %49 = sitofp i32 %39 to float, !dbg !141
  %50 = add nsw i32 %x1, %48, !dbg !142
  %51 = add nsw i32 %x0, %48, !dbg !142
  %52 = mul nsw i32 %y0, %29, !dbg !140
  %kx = fsub float %u, %49, !dbg !143
  %53 = sitofp i32 %42 to float, !dbg !144
  %54 = getelementptr inbounds [0 x %4], [0 x %4]* %32, i64 0, i32 %51, !dbg !124
  %55 = getelementptr inbounds [0 x %4], [0 x %4]* %32, i64 0, i32 %50, !dbg !124
  %56 = add nsw i32 %x1, %52, !dbg !142
  %57 = add nsw i32 %x0, %52, !dbg !142
  %58 = fsub float 1.000000e+00, %kx, !dbg !145
  %ky = fsub float %v, %53, !dbg !146
  %59 = getelementptr inbounds [0 x %4], [0 x %4]* %32, i64 0, i32 %56, !dbg !124
  %60 = getelementptr inbounds [0 x %4], [0 x %4]* %32, i64 0, i32 %57, !dbg !124
  %61 = fsub float 1.000000e+00, %ky, !dbg !145
  %62 = load %4, %4* %60, align 4, !dbg !124
  %63 = load %4, %4* %59, align 4, !dbg !124
  %64 = extractvalue %4 %62, 0, !dbg !147
  %65 = extractvalue %4 %62, 1, !dbg !148
  %66 = extractvalue %4 %62, 2, !dbg !149
  %67 = fmul float %58, %64, !dbg !150
  %68 = fmul float %58, %65, !dbg !150
  %69 = fmul float %58, %66, !dbg !150
  %70 = load %4, %4* %54, align 4, !dbg !124
  %71 = extractvalue %4 %63, 0, !dbg !151
  %72 = extractvalue %4 %63, 1, !dbg !152
  %73 = extractvalue %4 %63, 2, !dbg !153
  %74 = fmul float %kx, %71, !dbg !154
  %75 = fmul float %kx, %72, !dbg !154
  %76 = fmul float %kx, %73, !dbg !154
  %77 = load %4, %4* %55, align 4, !dbg !124
  %78 = extractvalue %4 %70, 0, !dbg !155
  %79 = extractvalue %4 %70, 1, !dbg !156
  %80 = extractvalue %4 %70, 2, !dbg !157
  %81 = fadd float %67, %74, !dbg !150
  %82 = fadd float %68, %75, !dbg !150
  %83 = fadd float %69, %76, !dbg !150
  %84 = fmul float %58, %78, !dbg !150
  %85 = fmul float %58, %79, !dbg !150
  %86 = fmul float %58, %80, !dbg !150
  %87 = fmul float %61, %81, !dbg !150
  %88 = fmul float %61, %82, !dbg !150
  %89 = fmul float %61, %83, !dbg !150
  %90 = extractvalue %4 %77, 0, !dbg !158
  %91 = extractvalue %4 %77, 1, !dbg !159
  %92 = extractvalue %4 %77, 2, !dbg !160
  %93 = fmul float %kx, %90, !dbg !154
  %94 = fmul float %kx, %91, !dbg !154
  %95 = fmul float %kx, %92, !dbg !154
  %96 = fadd float %84, %93, !dbg !150
  %97 = fadd float %85, %94, !dbg !150
  %98 = fadd float %86, %95, !dbg !150
  %99 = fmul float %ky, %96, !dbg !154
  %100 = fmul float %ky, %97, !dbg !154
  %101 = fmul float %ky, %98, !dbg !154
  %102 = fadd float %87, %99, !dbg !150
  %103 = fadd float %88, %100, !dbg !150
  %104 = fadd float %89, %101, !dbg !150
  %105 = insertvalue %4 undef, float %102, 0, !dbg !161
  %106 = insertvalue %4 %105, float %103, 1, !dbg !161
  %107 = insertvalue %4 %106, float %104, 2, !dbg !161
  ret %4 %107, !dbg !162

expr_true22:                                      ; preds = %if_join16
  %108 = load %2, %2* %uv_45438, align 4, !dbg !163
  %109 = extractvalue %2 %108, 0, !dbg !164
  %110 = fmul float %109, %31, !dbg !164
  %111 = fptosi float %110 to i32, !dbg !165
  %112 = call ptx_device i32 @llvm.nvvm.min.i(i32 %111, i32 %30), !dbg !166
  br label %_cont23, !dbg !166

_cont23:                                          ; preds = %expr_true22
  %113 = phi i32 [ %112, %expr_true22 ]
  %114 = extractvalue %2 %108, 1, !dbg !167
  %115 = fmul float %114, %36, !dbg !167
  %116 = fptosi float %115 to i32, !dbg !168
  %117 = call ptx_device i32 @llvm.nvvm.min.i(i32 %116, i32 %35), !dbg !169
  br label %_cont24, !dbg !169

_cont24:                                          ; preds = %_cont23
  %118 = phi i32 [ %117, %_cont23 ]
  %119 = mul nsw i32 %118, %29, !dbg !140
  %120 = add nsw i32 %113, %119, !dbg !142
  %121 = getelementptr inbounds [0 x %4], [0 x %4]* %32, i64 0, i32 %120, !dbg !124
  %122 = load %4, %4* %121, align 4, !dbg !124
  ret %4 %122, !dbg !170
}

declare float @__nv_floorf(float)

declare float @__nv_fmaxf(float, float)

declare float @__nv_fminf(float, float)

declare ptx_device i32 @llvm.nvvm.min.i(i32, i32)

define ptx_kernel void @lambda_37857([0 x %7]* %_37860_45268, [0 x %1]* %_37861_45269, [0 x %1]* %_37862_45270, [0 x %4]* %_37863_45271, %5 %_37864_45272) !dbg !171 {
lambda_37857_start:
  br label %lambda_37857, !dbg !173

lambda_37857:                                     ; preds = %lambda_37857_start
  %0 = call ptx_device i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !174
  br label %llvm.nvvm.read.ptx.sreg.tid.x_cont, !dbg !174

llvm.nvvm.read.ptx.sreg.tid.x_cont:               ; preds = %lambda_37857
  %llvm.nvvm.read.ptx.sreg.tid.x = phi i32 [ %0, %lambda_37857 ]
  %1 = call ptx_device i32 @llvm.nvvm.read.ptx.sreg.ntid.x(), !dbg !175
  br label %llvm.nvvm.read.ptx.sreg.ntid.x_cont, !dbg !175

llvm.nvvm.read.ptx.sreg.ntid.x_cont:              ; preds = %llvm.nvvm.read.ptx.sreg.tid.x_cont
  %llvm.nvvm.read.ptx.sreg.ntid.x = phi i32 [ %1, %llvm.nvvm.read.ptx.sreg.tid.x_cont ]
  %2 = call ptx_device i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !176
  br label %llvm.nvvm.read.ptx.sreg.ctaid.x_cont, !dbg !176

llvm.nvvm.read.ptx.sreg.ctaid.x_cont:             ; preds = %llvm.nvvm.read.ptx.sreg.ntid.x_cont
  %llvm.nvvm.read.ptx.sreg.ctaid.x = phi i32 [ %2, %llvm.nvvm.read.ptx.sreg.ntid.x_cont ]
  %3 = mul nsw i32 %llvm.nvvm.read.ptx.sreg.ntid.x, %llvm.nvvm.read.ptx.sreg.ctaid.x, !dbg !175
  %4 = add nsw i32 %llvm.nvvm.read.ptx.sreg.tid.x, %3, !dbg !174
  %5 = getelementptr inbounds [0 x %7], [0 x %7]* %_37860_45268, i64 0, i32 %4, !dbg !177
  %6 = load %7, %7* %5, align 4, !dbg !177
  %7 = call ptx_kernel %0 @compute_shader_input(i1 false, %5 %_37864_45272, %7 %6), !dbg !178
  br label %compute_shader_input_cont, !dbg !178

compute_shader_input_cont:                        ; preds = %llvm.nvvm.read.ptx.sreg.ctaid.x_cont
  %input = phi %0 [ %7, %llvm.nvvm.read.ptx.sreg.ctaid.x_cont ]
  %8 = extractvalue %0 %input, 5, !dbg !179
  %9 = extractvalue %4 %8, 0, !dbg !180
  %10 = extractvalue %4 %8, 2, !dbg !181
  %11 = getelementptr inbounds [0 x %4], [0 x %4]* %_37863_45271, i64 0, i32 %4, !dbg !182
  %12 = fmul float 0x3FD45F3060000000, %9, !dbg !180
  %13 = extractvalue %4 %8, 1, !dbg !183
  %14 = fmul float 0x3FD45F3060000000, %10, !dbg !181
  %15 = fmul float 0x3FD45F3060000000, %13, !dbg !183
  %16 = insertvalue %4 undef, float %12, 0, !dbg !184
  %17 = insertvalue %4 %16, float %15, 1, !dbg !184
  %18 = insertvalue %4 %17, float %14, 2, !dbg !184
  store %4 %18, %4* %11, align 4, !dbg !182
  ret void, !dbg !185
}

; Function Attrs: nounwind readnone
declare ptx_device i32 @llvm.nvvm.read.ptx.sreg.tid.x() #0

; Function Attrs: nounwind readnone
declare ptx_device i32 @llvm.nvvm.read.ptx.sreg.ntid.x() #0

; Function Attrs: nounwind readnone
declare ptx_device i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #0

attributes #0 = { nounwind readnone }

!nvvmir.version = !{!0}
!llvm.module.flags = !{!1}
!llvm.dbg.cu = !{!2}
!nvvm.annotations = !{!5, !6, !7, !8, !9, !10}

!0 = !{i64 1, i64 5}
!1 = !{i32 2, !"Debug Info Version", i32 3}
!2 = distinct !DICompileUnit(language: DW_LANG_C, file: !3, producer: "Impala", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4)
!3 = !DIFile(filename: "/home/niklas/repos/anydsl/rodent/build/tools/bench_interface/./bench_interface", directory: "")
!4 = !{}
!5 = !{%0 (i1, %5, %7)* @compute_shader_input, !"kernel", i64 1}
!6 = !{%4 (i1, %6, %2)* @lookup_tex, !"kernel", i64 1}
!7 = !{void ([0 x %7]*, [0 x %1]*, [0 x %1]*, [0 x %4]*, %5)* @lambda_37857, !"kernel", i64 1}
!8 = !{void ([0 x %7]*, [0 x %1]*, [0 x %1]*, [0 x %4]*, %5)* @lambda_37857, !"maxntidx", i64 64}
!9 = !{void ([0 x %7]*, [0 x %1]*, [0 x %1]*, [0 x %4]*, %5)* @lambda_37857, !"maxntidy", i64 1}
!10 = !{void ([0 x %7]*, [0 x %1]*, [0 x %1]*, [0 x %4]*, %5)* @lambda_37857, !"maxntidz", i64 1}
!11 = distinct !DISubprogram(name: "compute_shader_input", linkageName: "compute_shader_input", scope: null, file: !12, line: 92, type: !13, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!12 = !DIFile(filename: "bench_interface.impala", directory: "/home/niklas/repos/anydsl/rodent/tools/bench_interface")
!13 = !DISubroutineType(types: !4)
!14 = !DILocation(line: 92, column: 1, scope: !11)
!15 = !DILocation(line: 93, column: 27, scope: !11)
!16 = !DILocation(line: 93, column: 14, scope: !11)
!17 = !DILocation(line: 96, column: 14, scope: !11)
!18 = !DILocation(line: 95, column: 27, scope: !11)
!19 = !DILocation(line: 94, column: 27, scope: !11)
!20 = !DILocation(line: 95, column: 14, scope: !11)
!21 = !DILocation(line: 94, column: 14, scope: !11)
!22 = !DILocation(line: 97, column: 14, scope: !11)
!23 = !DILocation(line: 98, column: 14, scope: !11)
!24 = !DILocation(line: 97, column: 18, scope: !11)
!25 = !DILocation(line: 98, column: 18, scope: !11)
!26 = !DILocation(line: 99, column: 18, scope: !11)
!27 = !DILocation(line: 97, column: 23, scope: !11)
!28 = !DILocation(line: 98, column: 23, scope: !11)
!29 = !DILocation(line: 99, column: 23, scope: !11)
!30 = !DILocation(line: 42, column: 64, scope: !11)
!31 = !DILocation(line: 97, column: 28, scope: !11)
!32 = !DILocation(line: 98, column: 28, scope: !11)
!33 = !DILocation(line: 99, column: 28, scope: !11)
!34 = !DILocation(line: 66, column: 27, scope: !11)
!35 = !DILocation(line: 65, column: 15, scope: !11)
!36 = !DILocation(line: 66, column: 15, scope: !11)
!37 = !DILocation(line: 64, column: 27, scope: !11)
!38 = !DILocation(line: 64, column: 15, scope: !11)
!39 = !DILocation(line: 65, column: 27, scope: !11)
!40 = !DILocation(line: 60, column: 65, scope: !11)
!41 = !DILocation(line: 60, column: 53, scope: !11)
!42 = !DILocation(line: 60, column: 41, scope: !11)
!43 = !DILocation(line: 78, column: 50, scope: !11)
!44 = !DILocation(line: 103, column: 55, scope: !11)
!45 = !DILocation(line: 99, column: 14, scope: !11)
!46 = !DILocation(line: 103, column: 73, scope: !11)
!47 = !DILocation(line: 101, column: 52, scope: !11)
!48 = !DILocation(line: 103, column: 91, scope: !11)
!49 = !DILocation(line: 101, column: 46, scope: !11)
!50 = !DILocation(line: 123, column: 6, scope: !11)
!51 = !DILocation(line: 123, column: 5, scope: !11)
!52 = !DILocation(line: 123, column: 28, scope: !11)
!53 = !DILocation(line: 123, column: 37, scope: !11)
!54 = !DILocation(line: 104, column: 34, scope: !11)
!55 = !DILocation(line: 106, column: 34, scope: !11)
!56 = !DILocation(line: 104, column: 74, scope: !11)
!57 = !DILocation(line: 104, column: 54, scope: !11)
!58 = !DILocation(line: 91, column: 18, scope: !11)
!59 = !DILocation(line: 92, column: 18, scope: !11)
!60 = !DILocation(line: 91, column: 23, scope: !11)
!61 = !DILocation(line: 92, column: 23, scope: !11)
!62 = !DILocation(line: 91, column: 28, scope: !11)
!63 = !DILocation(line: 92, column: 28, scope: !11)
!64 = !DILocation(line: 90, column: 5, scope: !11)
!65 = !DILocation(line: 106, column: 14, scope: !11)
!66 = !DILocation(line: 107, column: 34, scope: !11)
!67 = !DILocation(line: 107, column: 14, scope: !11)
!68 = !DILocation(line: 108, column: 34, scope: !11)
!69 = !DILocation(line: 108, column: 14, scope: !11)
!70 = !DILocation(line: 82, column: 70, scope: !11)
!71 = !DILocation(line: 45, column: 64, scope: !11)
!72 = !DILocation(line: 20, column: 49, scope: !11)
!73 = !DILocation(line: 32, column: 13, scope: !11)
!74 = !DILocation(line: 35, column: 34, scope: !11)
!75 = !DILocation(line: 35, column: 49, scope: !11)
!76 = !DILocation(line: 30, column: 23, scope: !11)
!77 = !DILocation(line: 96, column: 5, scope: !11)
!78 = !DILocation(line: 30, column: 16, scope: !11)
!79 = !DILocation(line: 34, column: 63, scope: !11)
!80 = !DILocation(line: 34, column: 31, scope: !11)
!81 = !DILocation(line: 31, column: 22, scope: !11)
!82 = !DILocation(line: 31, column: 13, scope: !11)
!83 = !DILocation(line: 34, column: 24, scope: !11)
!84 = !DILocation(line: 34, column: 53, scope: !11)
!85 = !DILocation(line: 35, column: 27, scope: !11)
!86 = !DILocation(line: 37, column: 14, scope: !11)
!87 = !DILocation(line: 36, column: 5, scope: !11)
!88 = !DILocation(line: 112, column: 5, scope: !11)
!89 = !DILocation(line: 122, column: 1, scope: !11)
!90 = distinct !DISubprogram(name: "lookup_tex", linkageName: "lookup_tex", scope: null, file: !12, line: 67, type: !13, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!91 = !DILocation(line: 67, column: 1, scope: !90)
!92 = !DILocation(line: 70, column: 34, scope: !90)
!93 = !DILocation(line: 68, column: 8, scope: !90)
!94 = !DILocation(line: 70, column: 9, scope: !90)
!95 = !DILocation(line: 67, column: 50, scope: !90)
!96 = !DILocation(line: 71, column: 9, scope: !90)
!97 = !DILocation(line: 68, column: 33, scope: !90)
!98 = !DILocation(line: 72, column: 15, scope: !90)
!99 = !DILocation(line: 72, column: 41, scope: !90)
!100 = !DILocation(line: 77, column: 12, scope: !90)
!101 = !DILocation(line: 77, column: 22, scope: !90)
!102 = !DILocation(line: 77, column: 27, scope: !90)
!103 = !DILocation(line: 77, column: 37, scope: !90)
!104 = !DILocation(line: 78, column: 12, scope: !90)
!105 = !DILocation(line: 78, column: 22, scope: !90)
!106 = !DILocation(line: 78, column: 27, scope: !90)
!107 = !DILocation(line: 78, column: 37, scope: !90)
!108 = !DILocation(line: 81, column: 5, scope: !90)
!109 = !DILocation(line: 1, column: 1, scope: !90)
!110 = !DILocation(line: 79, column: 20, scope: !90)
!111 = !DILocation(line: 79, column: 13, scope: !90)
!112 = !DILocation(line: 49, column: 34, scope: !90)
!113 = !DILocation(line: 49, column: 30, scope: !90)
!114 = !DILocation(line: 74, column: 9, scope: !90)
!115 = !DILocation(line: 75, column: 34, scope: !90)
!116 = !DILocation(line: 75, column: 9, scope: !90)
!117 = !DILocation(line: 41, column: 46, scope: !90)
!118 = !DILocation(line: 41, column: 29, scope: !90)
!119 = !DILocation(line: 71, column: 34, scope: !90)
!120 = !DILocation(line: 83, column: 8, scope: !90)
!121 = !DILocation(line: 82, column: 54, scope: !90)
!122 = !DILocation(line: 58, column: 64, scope: !90)
!123 = !DILocation(line: 58, column: 37, scope: !90)
!124 = !DILocation(line: 82, column: 35, scope: !90)
!125 = !DILocation(line: 82, column: 77, scope: !90)
!126 = !DILocation(line: 59, column: 64, scope: !90)
!127 = !DILocation(line: 59, column: 37, scope: !90)
!128 = !DILocation(line: 83, column: 37, scope: !90)
!129 = !DILocation(line: 88, column: 29, scope: !90)
!130 = !DILocation(line: 65, column: 17, scope: !90)
!131 = !DILocation(line: 67, column: 27, scope: !90)
!132 = !DILocation(line: 67, column: 18, scope: !90)
!133 = !DILocation(line: 66, column: 17, scope: !90)
!134 = !DILocation(line: 68, column: 27, scope: !90)
!135 = !DILocation(line: 68, column: 18, scope: !90)
!136 = !DILocation(line: 69, column: 27, scope: !90)
!137 = !DILocation(line: 69, column: 18, scope: !90)
!138 = !DILocation(line: 70, column: 27, scope: !90)
!139 = !DILocation(line: 70, column: 18, scope: !90)
!140 = !DILocation(line: 82, column: 50, scope: !90)
!141 = !DILocation(line: 71, column: 23, scope: !90)
!142 = !DILocation(line: 82, column: 46, scope: !90)
!143 = !DILocation(line: 71, column: 18, scope: !90)
!144 = !DILocation(line: 72, column: 23, scope: !90)
!145 = !DILocation(line: 119, column: 6, scope: !90)
!146 = !DILocation(line: 72, column: 18, scope: !90)
!147 = !DILocation(line: 80, column: 27, scope: !90)
!148 = !DILocation(line: 81, column: 27, scope: !90)
!149 = !DILocation(line: 82, column: 27, scope: !90)
!150 = !DILocation(line: 119, column: 5, scope: !90)
!151 = !DILocation(line: 80, column: 34, scope: !90)
!152 = !DILocation(line: 81, column: 34, scope: !90)
!153 = !DILocation(line: 82, column: 34, scope: !90)
!154 = !DILocation(line: 119, column: 22, scope: !90)
!155 = !DILocation(line: 80, column: 41, scope: !90)
!156 = !DILocation(line: 81, column: 41, scope: !90)
!157 = !DILocation(line: 82, column: 41, scope: !90)
!158 = !DILocation(line: 80, column: 48, scope: !90)
!159 = !DILocation(line: 81, column: 48, scope: !90)
!160 = !DILocation(line: 82, column: 48, scope: !90)
!161 = !DILocation(line: 8, column: 5, scope: !90)
!162 = !DILocation(line: 13, column: 1, scope: !90)
!163 = !DILocation(line: 85, column: 29, scope: !90)
!164 = !DILocation(line: 58, column: 30, scope: !90)
!165 = !DILocation(line: 58, column: 29, scope: !90)
!166 = !DILocation(line: 58, column: 20, scope: !90)
!167 = !DILocation(line: 59, column: 30, scope: !90)
!168 = !DILocation(line: 59, column: 29, scope: !90)
!169 = !DILocation(line: 59, column: 20, scope: !90)
!170 = !DILocation(line: 82, column: 63, scope: !90)
!171 = distinct !DISubprogram(name: "lambda_37857", linkageName: "lambda_37857", scope: null, file: !172, line: 622, type: !13, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !4)
!172 = !DIFile(filename: "intrinsics_nvvm.impala", directory: "/home/niklas/repos/anydsl/runtime/platforms/impala")
!173 = !DILocation(line: 622, column: 36, scope: !171)
!174 = !DILocation(line: 609, column: 29, scope: !171)
!175 = !DILocation(line: 609, column: 58, scope: !171)
!176 = !DILocation(line: 609, column: 88, scope: !171)
!177 = !DILocation(line: 140, column: 63, scope: !171)
!178 = !DILocation(line: 140, column: 21, scope: !171)
!179 = !DILocation(line: 133, column: 46, scope: !171)
!180 = !DILocation(line: 24, column: 16, scope: !171)
!181 = !DILocation(line: 24, column: 34, scope: !171)
!182 = !DILocation(line: 141, column: 9, scope: !171)
!183 = !DILocation(line: 24, column: 25, scope: !171)
!184 = !DILocation(line: 8, column: 5, scope: !171)
!185 = !DILocation(line: 142, column: 5, scope: !171)
